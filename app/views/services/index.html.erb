<%= @organization.name %> services:
<ul>
  <% @services.each do |service| %>
    <li><%= link_to service.name, service_path(service, organization_id: @organization) %></li>
  <% end %>  

  <%= paginate @services %>
</ul>

<%= link_to 'Add service', new_service_path(organization_id: @organization) if current_user.service_owner? || current_user.admin? %>

<form name='graphqlForm'>
  <%= hidden_field :authenticity_token, form_authenticity_token, name: :authenticity_token %>
</form>

<script>
  var graphqlFrom = () => {
    let form = document.forms.graphqlForm
    let formData = new FormData(graphqlForm)

    let idAttribute = form['authenticity_token'].getAttribute('id')
    let authenticationToken = idAttribute.replace('authenticity_token_', '')

    return {
      form,
      formData,
      authenticationToken
    }
  }
  var graphqlServices = () => `
    query {
      services(organizationId: 1) {
        name
        organization {
          name
          phoneNumber
          serviceOwner {
            firstName
            lastName
          }
        }
      }
    }
  `
  let graphqlFormDataSet = (formData, key, value) => { formData.set(key, value) }

  function services() {
    let { form, formData, authenticationToken } = graphqlFrom()
    let query = graphqlServices()

    graphqlFormDataSet(formData, 'query', query)
    graphqlFormDataSet(formData, 'authenticity_token', authenticationToken)

    fetch('/graphql', {
      method: 'POST',
      body: formData
    })
    .then(res => res.json())
    .then(data => { console.log(JSON.stringify(data)) })
  }

  services()
</script>
