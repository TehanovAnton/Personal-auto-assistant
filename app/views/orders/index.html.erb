<p id="notice"><%= notice %></p>

<h1>Orders</h1>

<table>
  <thead>
    <tr>
      <th>Organization</th>
      <th>Service</th>
      <th>Work</th>
      <th>Price</th>
      <th>Car</th>
      <th colspan="3"></th>
    </tr>
  </thead>

  <tbody>
    <% @orders.each do |order| %>
      <tr>
        <td><%= order.organization.name %></td>
        <td><%= order.service.name %></td>
        <td><%= order.work.title %></td>
        <td><%= order.price %></td>
        <td><%= "#{order.car.maker}, #{order.car.model}" %></td>    
        <td><%= link_to 'Show', order_path(order) %></td>    
        <td><%= link_to 'Destroy', order_path(order), method: :delete, data: { confirm: 'Are you sure?' } %></td>
      </tr>
    <% end %>
  </tbody>
</table>

<%= paginate @orders %>

<form name='graphqlForm'>
  <%= hidden_field :authenticity_token, form_authenticity_token, name: :authenticity_token %>
</form>

<script>
  var graphqlFrom = () => {
    let form = document.forms.graphqlForm
    let formData = new FormData(graphqlForm)

    let idAttribute = form['authenticity_token'].getAttribute('id')
    let authenticationToken = idAttribute.replace('authenticity_token_', '')

    return {
      form,
      formData,
      authenticationToken
    }
  }
  var graphqlConsumables = () => `
    {
      orders(carId: 2) {
        service {
          name
        }
        car {
          maker
        }
      }
    }
  `
  let graphqlFormDataSet = (formData, key, value) => { formData.set(key, value) }

  function cars() {
    let { form, formData, authenticationToken } = graphqlFrom()
    let query = graphqlConsumables()

    graphqlFormDataSet(formData, 'query', query)
    graphqlFormDataSet(formData, 'authenticity_token', authenticationToken)

    fetch('/graphql', {
      method: 'POST',
      body: formData
    })
    .then(res => res.json())
    .then(data => { console.log(JSON.stringify(data)) })
  }

  cars()
</script>
