<p id="notice"><%= notice %></p>

<h1>Cars</h1>

<table>
  <thead>
    <tr>
      <th>Model</th>
      <th>Year production</th>
      <th>Engine volume</th>
      <th>Mileage</th>
      <th>Body type</th>
      <th>Fuel type</th>
      <th>Transmission type</th>
      <th>Maker</th>
      <th>Vin</th>
      <th colspan="3"></th>
    </tr>
  </thead>

  <tbody>
    <% @cars.each do |car| %>
      <tr>
        <td><%= car.model %></td>
        <td><%= car.year_production %></td>
        <td><%= car.engine_volume %></td>
        <td><%= car.mileage %></td>
        <td><%= car.body_type %></td>
        <td><%= car.fuel_type %></td>
        <td><%= car.transmission_type %></td>
        <td><%= car.maker %></td>
        <td><%= car.vin %></td>
        <td><%= link_to 'Show', car %></td>
        <td><%= link_to 'Consumables', consumables_path(car_id: car.id) %></td>
        <td><%= link_to 'Parts', parts_path(car) %></td>
        <td><%= link_to 'Orders', orders_path(car_id: car.id) %></td>
        <td><%= link_to 'Edit', edit_car_path(car) %></td>
        <td><%= link_to 'Destroy', car, method: :delete, data: { confirm: 'Are you sure?' } %></td>
      </tr>
    <% end %>
  </tbody>
</table>

<br>

<%= link_to 'New Car', new_car_path %>

<%= paginate @cars %>

<form name='graphqlForm'>
  <%= hidden_field :authenticity_token, form_authenticity_token, name: :authenticity_token %>
</form>

<script>
  var graphqlFrom = () => {
    let form = document.forms.graphqlForm
    let formData = new FormData(graphqlForm)

    let idAttribute = form['authenticity_token'].getAttribute('id')
    let authenticationToken = idAttribute.replace('authenticity_token_', '')

    return {
      form,
      formData,
      authenticationToken
    }
  }
  var graphqlCars = () => `
    query {
      cars {
        vin
        maker
        mileage
      }
    }
  `
  let graphqlFormDataSet = (formData, key, value) => { formData.set(key, value) }

  function cars() {
    let { form, formData, authenticationToken } = graphqlFrom()
    let query = graphqlCars()

    graphqlFormDataSet(formData, 'query', query)
    graphqlFormDataSet(formData, 'authenticity_token', authenticationToken)

    fetch('/graphql', {
      method: 'POST',
      body: formData
    })
    .then(res => res.json())
    .then(data => { console.log(JSON.stringify(data)) })
  }

  cars()
</script>
